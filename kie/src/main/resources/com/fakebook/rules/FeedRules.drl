package com.fakebook.rules

import com.fakebook.model.User
import com.fakebook.model.Post
import com.fakebook.model.Friendship
import com.fakebook.model.Hashtag
import com.fakebook.model.Like
import com.fakebook.model.Block
import java.time.LocalDateTime
import java.util.List
import java.util.Iterator

global com.fakebook.model.User currentUser;
global java.util.List feedPosts;

rule "Get Recent Friends Posts"
  agenda-group "feed"
  salience 100
when
  $friendship : Friendship(isFriend(currentUser.getUsername()))
  $friendUsername : String() from $friendship.getFriendOf(currentUser.getUsername())
  $post : Post(authorUsername == $friendUsername, isNewerThanHours(24), authorUsername != currentUser.getUsername())

  not Post(this == $post) from feedPosts
then
  $post.setRecommendationTag("From friends");
  feedPosts.add($post);
end

rule "Get Popular Hashtag Posts Liked By User"
  agenda-group "feed"
  salience 90
when
  $like : Like(username == currentUser.getUsername())
  $likedPost : Post(id == $like.postId)
  $hashtagName : String() from $likedPost.getHashtags()
  $hashtag : Hashtag(isPopular() == true, name == $hashtagName)
  $post : Post(
    getHashtags() contains $hashtag.name,
    isPopular() == true,
    authorUsername != currentUser.getUsername()
  )

  not Friendship(
    isFriend(currentUser.getUsername()),
    getFriendOf(currentUser.getUsername()) contains $post.authorUsername
  )
  not Post(this == $post) from feedPosts
then
  $post.setRecommendationTag("From popular hashtags you liked");
  feedPosts.add($post);
end

rule "Get Posts With Hashtags Liked By User"
  agenda-group "feed"
  salience 80
when
  $like : Like(username == currentUser.getUsername())
  $likedPost : Post(id == $like.postId)
  $hashtagName : String() from $likedPost.getHashtags()
  $post : Post(getHashtags() contains $hashtagName, authorUsername != currentUser.getUsername())

  not Friendship(
    isFriend(currentUser.getUsername()),
    getFriendOf(currentUser.getUsername()) contains $post.authorUsername
  )
  not Post(this == $post) from feedPosts
then
  $post.setRecommendationTag("From hashtags you liked");
  feedPosts.add($post);
end

rule "Get User Posts With Their Own Hashtags"
  agenda-group "feed"
  salience 70
when
  $currentUserPost : Post(authorUsername == currentUser.getUsername())
  $hashtagName : String() from $currentUserPost.getHashtags()
  $post : Post(getHashtags() contains $hashtagName, authorUsername != currentUser.getUsername())

  not Friendship(
    isFriend(currentUser.getUsername()),
    getFriendOf(currentUser.getUsername()) contains $post.authorUsername
  )
  not Post(this == $post) from feedPosts
then
  $post.setRecommendationTag("From hashtags you created");
  feedPosts.add($post);
end

rule "Get Popular"
  agenda-group "feed"
  salience 60
when
  $post : Post(isPopular() == true, authorUsername != currentUser.getUsername())

  not Friendship(
    isFriend(currentUser.getUsername()),
    getFriendOf(currentUser.getUsername()) contains $post.authorUsername
  )
  not Post(this == $post) from feedPosts
then
  $post.setRecommendationTag("Popular");
  feedPosts.add($post);
end

rule "Remove Posts From Blocked Users"
  agenda-group "feed"
  salience 50
when
  $block : Block(username == currentUser.getUsername() || blockedUsername == currentUser.getUsername())
  $blockedUser : String() from (
    $block.getUsername().equals(currentUser.getUsername()) ?
    $block.getBlockedUsername() :
    $block.getUsername()
  )
  $post : Post(authorUsername == $blockedUser)

  Post(this == $post) from feedPosts
then
  feedPosts.remove($post);
end

rule "Remove Old Posts"
  agenda-group "feed"
  salience 40
when
  $post : Post(!isNewerThanHours(72))

  Post(this == $post) from feedPosts
then
  feedPosts.remove($post);
end
